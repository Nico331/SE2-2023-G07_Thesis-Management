name: SonarCloud
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    services:
      mongoDB:
        image: 'mongo'
        restart: 'always'
        container_name: mongo_db_se
        ports:
          - '27017:27017'
          #environment:
          #MONGO_INITDB_ROOT_USERNAME: mongo
          #MONGO_INITDB_ROOT_PASSWORD: password
        volumes:
          - ./docker/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
          #- mongodata:/data/db
        networks:
          - network
      postgres:
        image: postgres
        container_name: keycloak_db
        ports:
          - '5432:5432'
        volumes:
          - postgres_data:/var/lib/postgresql/data
        environment:
          POSTGRES_DB: keycloak_db
          POSTGRES_USERNAME: keycloak_db
          POSTGRES_PASSWORD: password
        networks:
          - network
      keycloak:
        image: nico331/keycloak
        container_name: custom_keycloak
        #    environment:
        #      KEYCLOAK_ADMIN: "admin"
        #      KEYCLOAK_ADMIN_PASSWORD: "password"
        ports:
          - "8082:8080"
          - "8443:8443"
        depends_on:
          - postgres
        #    volumes:
        #      - ./docker/SpringBootKeycloak-realm.json:/opt/keycloak/data/import/SpringBootKeycloak-realm.json
        command:
          - start-dev
        #      - --import-realm
        networks:
          - network
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd server
          chmod +x gradlew
          ./gradlew build sonar --info
